[{"G:\\Desktop\\chatupp\\frontend\\src\\index.js":"1","G:\\Desktop\\chatupp\\frontend\\src\\App.js":"2","G:\\Desktop\\chatupp\\frontend\\src\\Pages\\Homepage.js":"3","G:\\Desktop\\chatupp\\frontend\\src\\Pages\\ChatPage.js":"4","G:\\Desktop\\chatupp\\frontend\\src\\components\\Authentication\\Signup.js":"5","G:\\Desktop\\chatupp\\frontend\\src\\components\\Authentication\\Login.js":"6","G:\\Desktop\\chatupp\\frontend\\src\\Context\\ChatProvider.js":"7","G:\\Desktop\\chatupp\\frontend\\src\\Pages\\Chatpage.js":"8","G:\\Desktop\\chatupp\\frontend\\src\\components\\misc\\SliderInfo.js":"9","G:\\Desktop\\chatupp\\frontend\\src\\components\\ChatBox.js":"10","G:\\Desktop\\chatupp\\frontend\\src\\components\\MyChats.js":"11","G:\\Desktop\\chatupp\\frontend\\src\\components\\misc\\ProfileModal.js":"12","G:\\Desktop\\chatupp\\frontend\\src\\components\\ChatLoading.js":"13","G:\\Desktop\\chatupp\\frontend\\src\\components\\UserAvatar\\UserListItem.js":"14","G:\\Desktop\\chatupp\\frontend\\src\\config\\ChatLogics.js":"15","G:\\Desktop\\chatupp\\frontend\\src\\components\\misc\\GroupChatModal.js":"16","G:\\Desktop\\chatupp\\frontend\\src\\components\\UserAvatar\\UserBadgeItem.js":"17","G:\\Desktop\\chatupp\\frontend\\src\\components\\SingleChat.js":"18","G:\\Desktop\\chatupp\\frontend\\src\\components\\misc\\UpdateGroupChatModal.js":"19"},{"size":572,"mtime":1668946061720,"results":"20","hashOfConfig":"21"},{"size":381,"mtime":1668944020957,"results":"22","hashOfConfig":"21"},{"size":1466,"mtime":1668945591285,"results":"23","hashOfConfig":"21"},{"size":730,"mtime":1668949789253,"results":"24","hashOfConfig":"21"},{"size":5625,"mtime":1668945703119,"results":"25","hashOfConfig":"21"},{"size":3214,"mtime":1668946459438,"results":"26","hashOfConfig":"21"},{"size":1159,"mtime":1669093801847,"results":"27","hashOfConfig":"21"},{"size":783,"mtime":1669200048695,"results":"28","hashOfConfig":"21"},{"size":5430,"mtime":1669092931882,"results":"29","hashOfConfig":"21"},{"size":620,"mtime":1669200301430,"results":"30","hashOfConfig":"21"},{"size":3443,"mtime":1669199852434,"results":"31","hashOfConfig":"21"},{"size":1924,"mtime":1669205061204,"results":"32","hashOfConfig":"21"},{"size":684,"mtime":1669024223627,"results":"33","hashOfConfig":"21"},{"size":1004,"mtime":1669047061688,"results":"34","hashOfConfig":"21"},{"size":256,"mtime":1669204449039,"results":"35","hashOfConfig":"21"},{"size":5929,"mtime":1669191118569,"results":"36","hashOfConfig":"21"},{"size":548,"mtime":1669190948532,"results":"37","hashOfConfig":"21"},{"size":2836,"mtime":1669206608412,"results":"38","hashOfConfig":"21"},{"size":8829,"mtime":1669358417032,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v4iv95",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Desktop\\chatupp\\frontend\\src\\index.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\App.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\Pages\\Homepage.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\Pages\\ChatPage.js",["99","100","101"],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\Authentication\\Signup.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\Authentication\\Login.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\Context\\ChatProvider.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\Pages\\Chatpage.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\misc\\SliderInfo.js",["102","103"],[],"import { useState } from \"react\";\r\nimport { Box, Text } from '@chakra-ui/layout'\r\nimport { useDisclosure, Button, Menu, MenuButton, Tooltip, Avatar, MenuList, MenuItem, MenuDivider, Drawer, DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerBody, useToast, Spinner } from '@chakra-ui/react'\r\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\"\r\nimport { ChatState } from \"../../Context/ChatProvider\"\r\nimport ProfileModal from \"./ProfileModal\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { Input } from \"@chakra-ui/input\"\r\nimport ChatLoading from \"../ChatLoading\"\r\nimport axios from \"axios\"\r\nimport UserListItem from '../UserAvatar/UserListItem'\r\nconst SliderInfo = () => {\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingChat, setLoadingChat] = useState(false);\r\n\r\n  const {\r\n    setSelectedChat,\r\n    notification,\r\n    setNotification,\r\n    chats,\r\n    setChats,\r\n    user,\r\n  } = ChatState();\r\n\r\n  const navigate = useNavigate();\r\n  \r\n  const toast = useToast();\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n      if(!search) {\r\n        toast({\r\n          title: 'Please provide input in search',\r\n          status: 'warning',\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"top-left\",\r\n        })\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setLoading(true);\r\n\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          }\r\n          \r\n        };\r\n\r\n        const { data } = await axios.get(`/api/user?search=${search}`, config)\r\n        \r\n        setLoading(false);\r\n        setSearchResult(data);\r\n        \r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error Occured!\",\r\n          description: \"Failed to Load the Search Results\",\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n          position: \"bottom-left\",\r\n        });\r\n      }\r\n  };\r\n\r\n  const accessChat = async (userId) => {\r\n    \r\n    try {\r\n      setLoadingChat(true);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization : `Bearer ${user.token}`,\r\n        },\r\n      };\r\n\r\n      const { data }  = await axios.post('/api/chat', { userId }, config);\r\n      \r\n      \r\n      if(!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\r\n      console.log(chats);\r\n      setSelectedChat(data);\r\n      setLoadingChat(false);\r\n      onClose();\r\n    } catch(error) {\r\n      toast({\r\n        title: \"Error Fetching the Chat\",\r\n        description: error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"bottom-left\",\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        bg=\"white\"\r\n        w=\"100%\"\r\n        p=\"5px 10px 5px 10px\"\r\n        borderWidth=\"5px\"\r\n      >\r\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\r\n          <Button variant=\"ghost\" onClick={onOpen}>\r\n          <i className=\"fas fa-search\"></i>\r\n          <Text display={{base: \"none\", md:\"flex\"}} px=\"4\" >\r\n            Search User\r\n          </Text>\r\n          </Button>\r\n        </Tooltip>\r\n\r\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\r\n          ChatUpp.\r\n        </Text>\r\n        <div>\r\n          <Menu>\r\n            <MenuButton p={1}>\r\n              <BellIcon fontSize=\"2xl\" m={1}/>\r\n            </MenuButton>\r\n\r\n          </Menu>\r\n          <Menu>\r\n            <MenuButton as={Button} rightIcon={<ChevronDownIcon/>}>\r\n              <Avatar \r\n              size=\"sm\" cursor=\"pointer\" name={user.name} src={user.photo}/>\r\n            </MenuButton>\r\n            <MenuList>\r\n              <ProfileModal user={user}>\r\n                <MenuItem>My Profile</MenuItem>{\" \"}\r\n              </ProfileModal>\r\n              <MenuDivider/>\r\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </div>\r\n      </Box>\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\r\n        <DrawerOverlay/>\r\n        <DrawerContent>\r\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\r\n          <DrawerBody>\r\n            <Box display=\"flex\" pb={2}>\r\n                <Input\r\n                  placeholder=\"Search by name or email\"\r\n                  mr={2}\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n                <Button \r\n                onClick={handleSearch}\r\n                >Go</Button>\r\n            </Box>\r\n            {loading ? (\r\n              <ChatLoading/>\r\n              ): (\r\n              searchResult?.map(user => (\r\n              <UserListItem\r\n                key={user._id}\r\n                user={user}\r\n                handleFunction={() => accessChat(user._id)}\r\n              />\r\n            ))\r\n          )}\r\n          {loadingChat && <Spinner ml=\"auto\" display=\"flex\"/>}\r\n          </DrawerBody>\r\n        </DrawerContent>\r\n        \r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\nexport default SliderInfo","G:\\Desktop\\chatupp\\frontend\\src\\components\\ChatBox.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\MyChats.js",[],["104"],"G:\\Desktop\\chatupp\\frontend\\src\\components\\misc\\ProfileModal.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\ChatLoading.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\UserAvatar\\UserListItem.js",["105"],[],"import { Avatar } from \"@chakra-ui/avatar\";\r\nimport { Box, Text } from \"@chakra-ui/layout\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\n\r\n\r\nconst UserListItem = ({ user, handleFunction }) => {\r\n    \r\n    \r\n\r\n    return (\r\n    <Box\r\n        onClick={handleFunction}\r\n        cursor=\"pointer\"\r\n        bg=\"#E8E8E8\"\r\n        _hover={{\r\n            background: \"#38B2AC\",\r\n            color: \"white\",\r\n        }}\r\n        w=\"100%\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        color=\"black\"\r\n        px={3}\r\n        py={2}\r\n        mb={2}\r\n        borderRadius=\"lg\"\r\n    >\r\n        <Avatar\r\n            mr={2}\r\n            size=\"sm\"\r\n            cursor=\"pointer\"\r\n            name={user.name}\r\n            src={user.photo}\r\n        />\r\n        <Box>\r\n            <Text>{user.name}</Text>\r\n            <Text fontSize=\"xs\">\r\n                <b>Email : </b>\r\n                {user.email}\r\n            </Text>\r\n        </Box>\r\n    </Box>\r\n    );\r\n};\r\n\r\n\r\nexport default UserListItem","G:\\Desktop\\chatupp\\frontend\\src\\config\\ChatLogics.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\misc\\GroupChatModal.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\UserAvatar\\UserBadgeItem.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\SingleChat.js",[],[],"G:\\Desktop\\chatupp\\frontend\\src\\components\\misc\\UpdateGroupChatModal.js",[],[],{"ruleId":"106","severity":1,"message":"107","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"110","line":9,"column":10,"nodeType":"108","messageId":"109","endLine":9,"endColumn":20},{"ruleId":"106","severity":1,"message":"111","line":9,"column":22,"nodeType":"108","messageId":"109","endLine":9,"endColumn":35},{"ruleId":"106","severity":1,"message":"112","line":24,"column":5,"nodeType":"108","messageId":"109","endLine":24,"endColumn":17},{"ruleId":"106","severity":1,"message":"113","line":25,"column":5,"nodeType":"108","messageId":"109","endLine":25,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":46,"column":6,"nodeType":"116","endLine":46,"endColumn":18,"suggestions":"117","suppressions":"118"},{"ruleId":"106","severity":1,"message":"119","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":19},"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'fetchAgain' is assigned a value but never used.","'setFetchAgain' is assigned a value but never used.","'notification' is assigned a value but never used.","'setNotification' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["120"],["121"],"'ChatState' is defined but never used.",{"desc":"122","fix":"123"},{"kind":"124","justification":"125"},"Update the dependencies array to be: [fetchAgain, fetchChats]",{"range":"126","text":"127"},"directive","",[1356,1368],"[fetchAgain, fetchChats]"]